# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
  - stage: 
    displayName: 'CI'
    jobs:
      - job: Build
        steps:
        - task: DotNetCoreCLI@2
          displayName: 'Restore'
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--no-restore'
        - task: DotNetCoreCLI@2
          displayName: 'Publish'
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(buildConfiguration) --output "$(build.artifactstagingdirectory)"'
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
  - stage:
    jobs:
      - job: 'DevDeploy'
        pool:
          vmImage: 'windows-latest'
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'specific'
            itemPattern: 'drop/*.zip'
            downloadPath: '$(System.DefaultWorkingDirectory)'
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Visual Studio Professional (3439d425-8223-42a7-8ca3-27c24ff681f4)'
            appType: 'apiApp'
            WebAppName: 'demoservice1'
            packageForLinux: '$(System.DefaultWorkingDirectory)/**/Service1.API.zip'
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Visual Studio Professional (3439d425-8223-42a7-8ca3-27c24ff681f4)'
            appType: 'apiApp'
            WebAppName: 'demoSvc2'
            packageForLinux: '$(System.DefaultWorkingDirectory)/**/Service2.API.zip'
        - task: AzureAppServiceSettings@1
          inputs:
            azureSubscription: 'Visual Studio Professional (3439d425-8223-42a7-8ca3-27c24ff681f4)'
            appName: 'demoservice1'
            resourceGroupName: 'rgcicdwin'
            appSettings: |
              [
                 {
                  "name": "Service2Url",
                  "value": "https://demosvc2.azurewebsites.net/api/v1/service2",
                  "slotSetting": false
                 }
              ]